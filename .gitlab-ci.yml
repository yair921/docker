# image: node:latest

# stages:
#   - build
#   - test

# cache:
#   paths:
#     - node_modules/

# install_dependencies:
#   stage: build
#   script:
#     - npm install

# testing:
#   stage: test
#   script: npm run test:ci


stages:
  - containerization
#  - deploy

before_script:
 - apt-get update
 - apt-get install -y curl
 - apt-get install -y software-properties-common python-software-properties
 - add-apt-repository -y ppa:webupd8team/java
 - apt-get update
 - apt-get install -y oracle-java8-installer
 - rm -rf /var/lib/apt/lists/*
 - apt-get update -yqq
 - apt-get install apt-transport-https -yqq
 - echo "deb http://dl.bintray.com/sbt/debian /" | tee -a /etc/apt/sources.list.d/sbt.list
 - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 642AC823
 - apt-get update -yqq
 - apt-get install sbt -yqq
 - sbt sbt-version

containerization:
  stage: containerization # must match the stage name declared above
  script:
    # Build the container image
    - docker build -t yairmontes/docker_app .
    # Push the container image to the registry
    - docker push yairmontes/docker_app
    # Cleanup by removing the local image
    - docker image rm yairmontes/docker_app
# deployment:
#   stage: deploy # must match the stage name declared above
#   script:
#     # create/update the kubernetes resources
#     - kubectl apply -f kubernetes_manifest.yml
#     # Restart the deployment so as to pull the latest version of the container image
#     - kubectl rollout restart deployment/docker_app
#   environment:
#     name: production