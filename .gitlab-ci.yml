# image: node:latest

# stages:
#   - build
#   - test

# cache:
#   paths:
#     - node_modules/

# install_dependencies:
#   stage: build
#   script:
#     - npm install

# testing:
#   stage: test
#   script: npm run test:ci


image: node:latest
# Defines the steps
stages:
  - build
  - test
  - containerization
  - deploy

# add to keep the packages in the process.
cache:
  paths:
    - node_modules/

building:
  stage: build
  script:
    - npm install

testing:
  dependencies: 
    - building
  stage: test
  script: npm run test:ci

containerization:
  image: docker:dind
  #image: gitlab/dind
  stage: containerization # must match the stage name declared above
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://localhost:31234
    DOCKER_TLS_CERTDIR: ""
  before_script:
    # Add docker-hub credentials 
    #- docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u $DOCKER_HUB_USER --password-stdin
  script:
    #- systemctl start docker
    # Build the container image
    - docker build -t docker_app .
    # Add Tag
    - docker tag docker_app yairmontes/docker_app
    # Push the container image to the registry
    - docker push yairmontes/docker_app
    # Cleanup by removing the local image
    #- docker image rm yairmontes/docker_app
  #variables to deploy -- new

deployment:
  stage: deploy # must match the stage name declared above
  image: bitnami/kubectl
  script:
    - kubectl get deploment docker_app || kubectl create deployment docker_app --image="yairmontes/docker_app"
    # create/update the kubernetes resources
    #- kubectl apply -f kubernetes_manifest.yml
    # Restart the deployment so as to pull the latest version of the container image
    #- kubectl rollout restart deployment/docker_app
  environment:
    name: production
